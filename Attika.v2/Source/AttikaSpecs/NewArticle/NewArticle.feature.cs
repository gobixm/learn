// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34209
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

#region Designer generated code

using System;
using TechTalk.SpecFlow;

#pragma warning disable

namespace Infotecs.Attika.AttikaSpecs.NewArticle
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("NewArticle")]
    public partial class NewArticleFeature
    {
        private static TechTalk.SpecFlow.ITestRunner testRunner;

#line 1 "NewArticle.feature"
#line hidden

        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "NewArticle", "In order to publish new article\r\nAs a tester\r\nI want to see new article was added" +
                " to store", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }

        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }

        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }

        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }

        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }

        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Valid new article request came")]
        public virtual void ValidNewArticleRequestCame()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Valid new article request came", ((string[])(null)));
#line 6
            this.ScenarioSetup(scenarioInfo);
#line 7
            testRunner.Given("I got working article service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
            testRunner.When("this service recieved \"valid new article request\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
            testRunner.And("service handles \"valid new article request\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
            testRunner.Then("desired article appeared in store", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Invalid new article request came")]
        public virtual void InvalidNewArticleRequestCame()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Invalid new article request came", ((string[])(null)));
#line 12
            this.ScenarioSetup(scenarioInfo);
#line 13
            testRunner.Given("I got working article service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
            testRunner.When("this service recieved \"invalid new article request\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
            testRunner.Then("service fails to handle \"invalid new article request\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}

#pragma warning restore

#endregion
